local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "[ ðŸ”¥NonStop Hub ]", IntroText = " ðŸ”¥NonStop Hub ", HidePremium = false, SaveConfig = true, ConfigFolder = "NonStop Hub"})

if not game:IsLoaded() then repeat game.Loaded:Wait() until game:IsLoaded() end
pcall(function()
    if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") then
        repeat wait()
            if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
                if _G.Team == "Pirate" then
                    for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                        v.Function()
                    end
                elseif _G.Team == "Marine" then
                    for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                        v.Function()
                    end
                else
                    for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton.Activated)) do                                                                                                
                        v.Function()
                    end
                end
            end
        until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
    end
end)

---- G ------
_G.MobAura = true
_G.Auto_Elite_Hunter = true
_G.AncientOne_Quest = true


---c++-------



local plr = game.Players.LocalPlayer
local CbFw = debug.getupvalues(require(plr.PlayerScripts.CombatFramework))
local CbFw2 = CbFw[2]
function GetCurrentBlade()
local p13 = CbFw2.activeController
local ret = p13.blades[1]
if not ret then
    return
end
while ret.Parent ~= game.Players.LocalPlayer.Character do
    ret = ret.Parent
end
return ret
end
function AttackNoCD()
local AC = CbFw2.activeController
for i = 1, 1 do
    local bladehit =
        require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
        plr.Character,
        {plr.Character.HumanoidRootPart},
        60
    )
    local cac = {}
    local hash = {}
    for k, v in pairs(bladehit) do
        if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
            table.insert(cac, v.Parent.HumanoidRootPart)
            hash[v.Parent] = true
        end
    end
    bladehit = cac
    if #bladehit > 0 then
        local u8 = debug.getupvalue(AC.attack, 5)
        local u9 = debug.getupvalue(AC.attack, 6)
        local u7 = debug.getupvalue(AC.attack, 4)
        local u10 = debug.getupvalue(AC.attack, 7)
        local u12 = (u8 * 798405 + u7 * 727595) % u9
        local u13 = u7 * 798405
        (function()
            u12 = (u12 * u9 + u13) % 1099511627776
            u8 = math.floor(u12 / u9)
            u7 = u12 - u8 * u9
        end)()
        u10 = u10 + 1
        debug.setupvalue(AC.attack, 5, u8)
        debug.setupvalue(AC.attack, 6, u9)
        debug.setupvalue(AC.attack, 4, u7)
        debug.setupvalue(AC.attack, 7, u10)
        pcall(
            function()
                for k, v in pairs(AC.animator.anims.basic) do
                    v:Play()
                end
            end
        )
        if plr.Character:FindFirstChildOfClass("Tool") and AC.blades and AC.blades[1] then
            game:GetService("ReplicatedStorage").RigControllerEvent:FireServer(
                "weaponChange",
                tostring(GetCurrentBlade())
            )
            game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(u12 / 1099511627776 * 16777215), u10)
            game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, i, "")
            y.activeController.timeToNextAttack = -10
            y.activeController.hitboxMagnitude = 100
            y.activeController.active = false
            y.activeController.timeToNextBlock = 0
            y.activeController.focusStart = 0
            y.activeController.increment = 0
            y.activeController.blocking = false
            y.activeController.attacking = false
            y.activeController.humanoid.AutoRotate = true
        end
    end
end
end
require(game.ReplicatedStorage.Util.CameraShaker):Stop()
spawn(function()
while wait(.05) do
    pcall(function()
        if _G.MobAura and _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
            repeat wait(.01)
                AttackNoCD()
            until _G.MobAura == false or not _G.Auto_Elite_Hunter or _G.AncientOne_Quest
        end
    end)
end
end)
local CameraShaker = require(game.ReplicatedStorage.Util.CameraShaker)
CombatFrameworkR = require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework)
y = debug.getupvalues(CombatFrameworkR)[2]
spawn(function()
game:GetService("RunService").RenderStepped:Connect(function()
    if _G.MobAura and _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
        pcall(function()
            CameraShaker:Stop()
            y.activeController.timeToNextAttack = 0
            y.activeController.hitboxMagnitude = 100
            y.activeController.active = false
            y.activeController.timeToNextBlock = 0
            y.activeController.focusStart = 0
            y.activeController.increment = 0
            y.activeController.blocking = false
            y.activeController.attacking = false
            y.activeController.humanoid.AutoRotate = true
        end)
    end
end)
end)
spawn(function()
game:GetService("RunService").RenderStepped:Connect(function()
    if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
        game.Players.LocalPlayer.Character.Stun.Value = 0
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
        game.Players.LocalPlayer.Character.Busy.Value = false
    end
end)
end)
spawn(function()
if game.Players.LocalPlayer.Character:FindFirstChild("Stun") then
    game.Players.LocalPlayer.Character.Stun.Changed:connect(function()
        pcall(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("Stun") then
                game.Players.LocalPlayer.Character.Stun.Value = 0
            end
        end)
    end)
end
end)


spawn(function()
if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
    while wait() do
        for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"]:GetChildren()) do
            pcall(function()
                if v.Name == ("CurvedRing") or v.Name == ("SlashHit") or v.Name == ("SwordSlash") or v.Name == ("SlashTail") or v.Name == ("Sounds") then
                    v:Destroy()
                end
            end)
        end
    end    
end    
end)

local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]
local RigController = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.CombatFramework.RigController)
local RigControllerR = getupvalues(RigController)[2]
local realbhit = require(game.ReplicatedStorage.CombatFramework.RigLib)
local cooldownfastattack = tick()

function CurrentWeapon()
local ac = CombatFrameworkR.activeController
local ret = ac.blades[1]
if not ret then return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name end
pcall(function()
    while ret.Parent~=game.Players.LocalPlayer.Character do ret=ret.Parent end
end)
if not ret then return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name end
return ret
end

function getAllBladeHitsPlayers(Sizes)
local Hits = {}
local Client = game.Players.LocalPlayer
local Characters = game:GetService("Workspace").Characters:GetChildren()
for i=1,#Characters do local v = Characters[i]
    local Human = v:FindFirstChildOfClass("Humanoid")
    if v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
        table.insert(Hits,Human.RootPart)
    end
end
return Hits
end

function getAllBladeHits(Sizes)
local Hits = {}
local Client = game.Players.LocalPlayer
local Enemies = game:GetService("Workspace").Enemies:GetChildren()
for i=1,#Enemies do local v = Enemies[i]
    local Human = v:FindFirstChildOfClass("Humanoid")
    if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
        table.insert(Hits,Human.RootPart)
    end
end
return Hits
end

function AttackFunction()
local ac = CombatFrameworkR.activeController
if ac and ac.equipped then
    for indexincrement = 1, 1 do
        local bladehit = getAllBladeHits(30)
        if #bladehit > 0 then
            local AcAttack8 = debug.getupvalue(ac.attack, 5)
            local AcAttack9 = debug.getupvalue(ac.attack, 6)
            local AcAttack7 = debug.getupvalue(ac.attack, 4)
            local AcAttack10 = debug.getupvalue(ac.attack, 7)
            local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
            local NumberAc13 = AcAttack7 * 798405
            (function()
                NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
                AcAttack8 = math.floor(NumberAc12 / AcAttack9)
                AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
            end)()
            AcAttack10 = AcAttack10 + 1
            debug.setupvalue(ac.attack, 5, AcAttack8)
            debug.setupvalue(ac.attack, 6, AcAttack9)
            debug.setupvalue(ac.attack, 4, AcAttack7)
            debug.setupvalue(ac.attack, 7, AcAttack10)
            for k, v in pairs(ac.animator.anims.basic) do
                v:Play(0.1,0.5,0.2,0.8)
            end                 
            if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then 
                game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(CurrentWeapon()))
                game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
                game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "") 
            end
        end
    end
end
end

coroutine.wrap(function()
while task.wait(.1) do
local ac = CombatFrameworkR.activeController
    if ac and ac.equipped then
        if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
            AttackFunction()
            if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
                if tick() - cooldownfastattack > 5 then wait(.9) cooldownfastattack = tick() end
            end
        elseif _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
            if ac.hitboxMagnitude ~= 55 then
                ac.hitboxMagnitude = 55
            end
            ac:attack()
        end
    end
end
end)()

local SeraphFrame = debug.getupvalues(require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework")))[2]
local VirtualUser = game:GetService('VirtualUser')
local RigControllerR = debug.getupvalues(require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework.RigController))[2]
local Client = game:GetService("Players").LocalPlayer
local DMG = require(Client.PlayerScripts.CombatFramework.Particle.Damage)

function SeraphFuckWeapon() 
local p13 = SeraphFrame.activeController
local wea = p13.blades[1]
if not wea then return end
while wea.Parent~=game.Players.LocalPlayer.Character do wea=wea.Parent end
return wea
end

function getHits(Size)
local Hits = {}
local Enemies = workspace.Enemies:GetChildren()
local Characters = workspace.Characters:GetChildren()
for i=1,#Enemies do local v = Enemies[i]
    local Human = v:FindFirstChildOfClass("Humanoid")
    if Human and Human.RootPart and Human.Health > 0 and game.Players.LocalPlayer:DistanceFromCharacter(Human.RootPart.Position) < Size+5 then
        table.insert(Hits,Human.RootPart)
    end
end
for i=1,#Characters do local v = Characters[i]
    if v ~= game.Players.LocalPlayer.Character then
        local Human = v:FindFirstChildOfClass("Humanoid")
        if Human and Human.RootPart and Human.Health > 0 and game.Players.LocalPlayer:DistanceFromCharacter(Human.RootPart.Position) < Size+5 then
            table.insert(Hits,Human.RootPart)
        end
    end
end
return Hits
end

task.spawn(
function()
while wait(0) do
    if  _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
        if SeraphFrame.activeController then
            -- if v.Humanoid.Health > 0 then
                SeraphFrame.activeController.timeToNextAttack = 0
                SeraphFrame.activeController.focusStart = 0
                SeraphFrame.activeController.hitboxMagnitude = 40
                SeraphFrame.activeController.humanoid.AutoRotate = true
                SeraphFrame.activeController.increment = 1 + 1 / 1
            -- end
        end
    end
end
end)

function Boost()
spawn(function()
game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(SeraphFuckWeapon()))
end)
end

function Unboost()
spawn(function()
    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("unequipWeapon",tostring(SeraphFuckWeapon()))
end)
end

local cdnormal = 0
local Animation = Instance.new("Animation")
local CooldownFastAttack = 0
Attack = function()
local ac = SeraphFrame.activeController
if ac and ac.equipped then
    task.spawn(
        function()
        if tick() - cdnormal > 0.5 then
            ac:attack()
            cdnormal = tick()
        else
            -- Animation.AnimationId = ac.anims.basic[2]
            -- ac.humanoid:LoadAnimation(Animation):Play(1, 1)
            game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", getHits(120), 2, "")
        end
    end)
end
end

b = tick()
spawn(function()
while wait(.2) do
    if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
        if b - tick() > 0.99 then
            wait(.2)
            b = tick()
        end
        pcall(function()
            for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                if v.Humanoid.Health > 0 then
                    if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 60.9 then
                        Attack()
                        wait(.5)
                        Boost()
                    end
                end
            end
        end)
    end
end
end)

k = tick()
spawn(function()
while wait(0.059) do
    if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
        if k - tick() > 0.99 then
            wait(0)
            k = tick()
        end
        pcall(function()
            for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                if v.Humanoid.Health > 0 then
                    if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 60.9 then
                    wait(.2)
                    Unboost()
                    end
                end
            end
        end)
    end
end
end)

tjw1 = true
task.spawn(
function()
    local a = game.Players.LocalPlayer
    local b = require(a.PlayerScripts.CombatFramework.Particle)
    local c = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib)
    if not shared.orl then
        shared.orl = c.wrapAttackAnimationAsync
    end
    if not shared.cpc then
        shared.cpc = b.play
    end
    if tjw1 then
        pcall(
            function()
                c.wrapAttackAnimationAsync = function(d, e, f, g, h)
                    local i = c.getBladeHits(e, f, g)
                    if i then
                        b.play = function()
                        end
                        d:Play(1.25, 1.25, 1.25)
                        h(i)
                        b.play = shared.cpc
                        wait(.5)
                        d:Stop()
                    end
                end
            end 
        )
    end
end)

spawn(function()
while wait() do
    pcall(function()
        for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if v.ToolTip == "Melee" then
                _G.Select_Weapon = v.Name
            end
        end
    end)
end
end)




function topos(Pos)
    Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    if game.Players.LocalPlayer.Character.Humanoid.Sit == true then game.Players.LocalPlayer.Character.Humanoid.Sit = false end
    pcall(function() tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(Distance/210, Enum.EasingStyle.Linear),{CFrame = Pos}) end)
    tween:Play()
    if Distance <= 300 then
        tween:Cancel()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
    end
    if _G.StopTween == true then
        tween:Cancel()
        _G.T = false
    end
end

spawn(function()
    while wait() do
        if _G.MobAura then
            for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude <= 1000 then
                        pcall(function()
                            repeat wait(.1)
                                EquipWeapon(_G.Select_Weapon)
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid.WalkSpeed = 0
                                v.Humanoid.JumpPower = 0
                                v.HumanoidRootPart.Locked = true
                                v.Humanoid:ChangeState(14)
                                v.Humanoid:ChangeState(11)
                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                if v.Humanoid:FindFirstChild("Animator") then
                                    v.Humanoid.Animator:Destroy()
                                end
                                MobAura = v.HumanoidRootPart.CFrame
                                MobAuraName = v.Name
                                topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
                                game:GetService("VirtualUser"):CaptureController()
                                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                            until not _G.MobAura  or not v.Parent or v.Humanoid.Health <= 0
                        end)
                    end
                end
            end
        end
    end
end)
    
spawn(function()
game:GetService("RunService").Heartbeat:Connect(function()
    pcall(function()
        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if not string.find("Boss",v.Name) then
                if _G.MobAura and (v.HumanoidRootPart.Position - MobAura.Position).magnitude <= 300 then
                    if v.Name == MobAuraName then
                        v.HumanoidRootPart.CFrame = MobAura
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                        if v.Humanoid:FindFirstChild("Animator") then
                            v.Humanoid.Animator:Destroy()
                        end
                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius",  math.huge)
                    end
                end
            end
        end
    end)
end)
end)
    
spawn(function()
pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if _G.Teleport_to_Mythic_Island or _G.Teleport_to_Gear or _G.Float or _G.MobAura or _G.Auto_Elite_Hunter or _G.TeleporttoIsland or _G.Auto_Farm_Observation_Haki or _G.AncientOne_Quest then
            if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                local Noclip = Instance.new("BodyVelocity")
                Noclip.Name = "BodyClip"
                Noclip.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
                Noclip.MaxForce = Vector3.new(100000,100000,100000)
                Noclip.Velocity = Vector3.new(0,0,0)
            end
        else	
            if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
            end
        end
    end)
end)
end)
 
 
 
spawn(function()
pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if _G.Teleport_to_Mythic_Island or _G.Teleport_to_Gear or _G.Float or _G.MobAura or _G.Auto_Elite_Hunter or _G.TeleporttoIsland or _G.Auto_Farm_Observation_Haki or _G.AncientOne_Quest then
            for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false    
                end
            end
        end
    end)
end)
end)

function EquipWeapon(ToolSe)
    if not _G.NotAutoEquip then
        if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
            Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
            wait(.1)
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(Tool)
        end
    end
end
    
spawn(function()
game:GetService("RunService").Heartbeat:Connect(function()
    if _G.MobAura or _G.Teleport_to_Mythic_Island or _G.Teleport_to_Gear or _G.Auto_Elite_Hunter or _G.TeleporttoIsland or _G.Auto_Farm_Observation_Haki or _G.AncientOne_Quest then
        if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
            setfflag("HumanoidParallelRemoveNoPhysics", "False")
            setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
            game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end
end)
end)

spawn(function()
while wait() do
    if _G.MobAura or _G.Auto_Elite_Hunter or _G.AncientOne_Quest then
        pcall(function()
            game:GetService("Players").LocalPlayer.Idled:connect(function()
                game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                wait(1)
                game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            end)
        end)
    end
end
end)


spawn(function()
while wait() do
    if _G.Auto_Elite_Hunter then
        pcall(function()
            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Diablo") or string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Deandre") or string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Urban") then
                    if game:GetService("Workspace").Enemies:FindFirstChild("Diablo [Lv. 1750]") or game:GetService("Workspace").Enemies:FindFirstChild("Deandre [Lv. 1750]") or game:GetService("Workspace").Enemies:FindFirstChild("Urban [Lv. 1750]") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == "Diablo [Lv. 1750]" or v.Name == "Deandre [Lv. 1750]" or v.Name == "Urban [Lv. 1750]" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat wait()
                                        AutoHaki()
                                        EquipWeapon(_G.Select_Weapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                        sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                                    until _G.Auto_Elite_Hunter == false or v.Humanoid.Health <= 0 or not v.Parent
                                end
                            end
                        end
                    else
                        if game:GetService("ReplicatedStorage"):FindFirstChild("Diablo [Lv. 1750]") then
                            if _G.BypassTP and (game:GetService("ReplicatedStorage"):FindFirstChild("Diablo [Lv. 1750]").HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1200 then
                                BypassTP(game:GetService("ReplicatedStorage"):FindFirstChild("Diablo [Lv. 1750]").HumanoidRootPart.CFrame)
                                wait(2)
                            else
                                topos(game:GetService("ReplicatedStorage"):FindFirstChild("Diablo [Lv. 1750]").HumanoidRootPart.CFrame * CFrame.new(0,50,0))
                            end
                        elseif game:GetService("ReplicatedStorage"):FindFirstChild("Deandre [Lv. 1750]") then
                            if _G.BypassTP and (game:GetService("ReplicatedStorage"):FindFirstChild("Deandre [Lv. 1750]").HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1200 then
                                BypassTP(game:GetService("ReplicatedStorage"):FindFirstChild("Deandre [Lv. 1750]").HumanoidRootPart.CFrame)
                                wait(2)
                            else
                                topos(game:GetService("ReplicatedStorage"):FindFirstChild("Deandre [Lv. 1750]").HumanoidRootPart.CFrame * CFrame.new(0,50,0))
                            end
                        elseif game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]") then
                            if _G.BypassTP and (game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1200 then
                                BypassTP(game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.CFrame)
                                wait(2)
                            else
                                topos(game:GetService("ReplicatedStorage"):FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.CFrame * CFrame.new(0,50,0))
                            end
                        end
                    end                    
                end
            else
                if _G.Auto_Elite_Hunter_Hop and game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("EliteHunter") == "I don't have anything for you right now. Come back later." then
                    if _G.StopWhenGodChalice then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
                            _G.Auto_Elite_Hunter_Hop = false
                            wait()
                        else
                            Teleport()
                        end
                    else
                        Teleport()
                    end
                else
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                end
            end
        end)
    end
end
end)    

spawn(function()
    while wait() do
        pcall(function()
            if _G.Teleport_to_Mythic_Island and game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then
                for i,v in pairs(game:GetService("Workspace").Map.MysticIsland:GetChildren()) do
                    topos(CFrame.new(game:GetService("Workspace").Map.MysticIsland.PluginGrass.Position))
                end
            end
        end)
    end
    end)   
    

    
    spawn(function()
    while wait() do
        pcall(function()
            if _G.Teleport_to_Gear then
                for i,v in pairs(game:GetService("Workspace").Map.MysticIsland:GetChildren()) do
                    if v.Name == "Part" then
                        if v.ClassName == "MeshPart" then
                            topos(CFrame.new(v.Position))
                        end	
                    end
                end
            end
        end)
    end
    end)





function AutoHaki()
    if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("HasBuso") then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
    end
end

local VirtualInputManager = game:GetService('VirtualInputManager')

spawn(function()
    while wait() do
        pcall(function()
            if _G.AncientOne_Quest then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("UpgradeRace","Buy")
                if game.Players.LocalPlayer.PlayerGui.Main.RaceEnergy.Fill.BackgroundColor3 == Color3.fromRGB(255, 0 , 0) or not game.Players.LocalPlayer.PlayerGui.TransformationHUD.ImageLabel.Visible then
                    if game:GetService("Workspace").Enemies:FindFirstChild("Reborn Skeleton [Lv. 1975]") or game:GetService("Workspace").Enemies:FindFirstChild("Living Zombie [Lv. 2000]") or game:GetService("Workspace").Enemies:FindFirstChild("Domenic Soul [Lv. 2025]") or game:GetService("Workspace").Enemies:FindFirstChild("Posessed Mummy [Lv. 2050]") then
    					for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
    						if v.Name == "Reborn Skeleton [Lv. 1975]" or v.Name == "Living Zombie [Lv. 2000]" or v.Name == "Demonic Soul [Lv. 2025]" or v.Name == "Posessed Mummy [Lv. 2050]" then
    							if v.Humanoid.Health > 0 then
    								repeat wait()
    									AutoHaki()
    									EquipWeapon(_G.Select_Weapon)
    									v.HumanoidRootPart.CanCollide = false
    									v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
    									AncientOneMon = v.HumanoidRootPart.CFrame
    								    VirtualInputManager:SendKeyEvent(true, "Y", false, game)
                        				wait()
                        				VirtualInputManager:SendKeyEvent(false, "Y", false, game)
    									topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
    								until _G.AncientOne_Quest == false or not v.Parent or v.Humanoid.Health <= 0
    							end
    						end
    					end
    				else
    					for i,v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do 
    						if v.Name == "Reborn Skeleton [Lv. 1975]" then
    							topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
    						elseif v.Name == "Living Zombie [Lv. 2000]" then
    							topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
    						elseif v.Name == "Demonic Soul [Lv. 2025]" then
    							topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
    						elseif v.Name == "Posessed Mummy [Lv. 2050]" then
    							topos(v.HumanoidRootPart.CFrame * CFrame.new(0,50,0))
    						end
    					end
    					topos(CFrame.new(-9466.72949, 171.162918, 6132.01514))
    				end
                else
    				VirtualInputManager:SendKeyEvent(true, "Y", false, game)
    				wait()
    				VirtualInputManager:SendKeyEvent(false, "Y", false, game)
    				topos(CFrame.new(-9501.73046875, 600.0858154296875, 6034.048828125))
    			end
            end
        end)
    end
end)

spawn(function()
	game:GetService("RunService").Heartbeat:Connect(function()
		pcall(function()
			for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
				if _G.AncientOne_Quest and (v.Name == "Reborn Skeleton [Lv. 1975]" or v.Name == "Living Zombie [Lv. 2000]" or v.Name == "Demonic Soul [Lv. 2025]" or v.Name == "Posessed Mummy [Lv. 2050]") and (v.HumanoidRootPart.Position - AncientOneMon.Position).magnitude <= 250 then
					v.HumanoidRootPart.CFrame = AncientOneMon
	                v.HumanoidRootPart.CanCollide = false
                    v.Humanoid.WalkSpeed = 0
                    v.Humanoid.JumpPower = 0
                    v.HumanoidRootPart.Locked = true
                    v.Humanoid:ChangeState(14)
                    v.Humanoid:ChangeState(11)
					v.HumanoidRootPart.CanCollide = false
					v.HumanoidRootPart.Size = Vector3.new(50,50,50)
					if v.Humanoid:FindFirstChild("Animator") then
						v.Humanoid.Animator:Destroy()
					end
					sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius",  math.huge)
				end
			end
		end)
	end)
end)



function Moon()
    pcall(function()
        if game:GetService("Players").localPlayer.PlayerGui.ScreenGui:FindFirstChild("Moon") then
            game:GetService("Players").localPlayer.PlayerGui.ScreenGui.Moon:Destroy()
        end
    local Moon = Instance.new("ImageLabel")
        Moon.Parent = game:GetService("Players").localPlayer.PlayerGui.ScreenGui
        Moon.Name = "Moon"
        Moon.Size = UDim2.new(0.100, 0,0.18, 0)
        Moon.Position = UDim2.new(0, 0,0.05, 0)
        Moon.Rotation = 180
        Moon.Image = game:GetService("Lighting").Sky.MoonTextureId
    end)
end

spawn(function()
    while wait() do
        pcall(function()
            if not _G.Moon then
                if game:GetService("Players").localPlayer.PlayerGui.ScreenGui:FindFirstChild("Moon") then
                    game:GetService("Players").localPlayer.PlayerGui.ScreenGui.Moon:Destroy()
                end
            end
        end)        
    end
end)



------Menu--------
local MobTab = Window:MakeTab({
	Name = "Kill Mob",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


MobTab:AddToggle({
	Name = "MobAura",
	Default = false,
	Callback = function(Value)
		_G.MobAura = Value
	end    
})

local Tab = Window:MakeTab({
	Name = "ðŸ”¥RACE V4",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


Tab:AddButton({
	Name = "TempleTimeTeleport",
	Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(28286.35546875, 14896.5341796875, 102.62469482421875)
      		print("button pressed")
  	end    
})


Tab:AddButton({
	Name = "RaceDoor",
	Callback = function()
        if game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Human" then
            
            topos(CFrame.new(29231.283203125, 14890.9755859375, -205.39077758789062))
            print("Human")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Fishman" then
            
            topos(CFrame.new(28228.47265625, 14890.978515625, -212.1103515625))
            print("Fish")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Cybrog" then
            
            topos(CFrame.new(28496.66015625, 14895.9755859375, -422.5971374511719))
            print("Cybrog")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Ghoul" then
            
            topos(CFrame.new(28673.2734375, 14890.6767578125, 450.3265686035156))
            print("Ghoul")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Skypiea" then
            
            topos(CFrame.new(28962.220703125, 14919.6240234375, 234.61563110351562))
            print("Sky")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Mink" then
        
            topos(CFrame.new(29014.6171875, 14890.9755859375, -378.9480285644531))
            print("Mink")
        end
  	end    
})

Tab:AddButton({
	Name = "CompleteRace",
	Callback = function()
        if game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Human" then
            _G.Kill_Aura = true
            spawn(function()
                while wait() do
                    if _G.Kill_Aura then
                        for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                pcall(function()
                                    repeat wait(.1)
                                        v.Humanoid.Health = 0
                                        v.HumanoidRootPart.CanCollide = false
                                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                                    until not _G.Kill_Aura  or not v.Parent or v.Humanoid.Health <= 0
                                end)
                            end
                        end
                    end
                end
            repeat wait(10) until game:IsLoaded(2)    
            end)
            print("Human")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Fishman" then
            print("Fish")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Cybrog" then
            print("Cybrog")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Ghoul" then
            _G.Kill_Aura = true
            spawn(function()
                while wait() do
                    if _G.Kill_Aura then
                        for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                pcall(function()
                                    repeat wait(.1)
                                        v.Humanoid.Health = 0
                                        v.HumanoidRootPart.CanCollide = false
                                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                                    until not _G.Kill_Aura  or not v.Parent or v.Humanoid.Health <= 0
                                end)
                            end
                        end
                    end
                end
            repeat wait(10) until game:IsLoaded(2)     
            end)
            print("Ghoul")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Skypiea" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Position = game:GetService("Workspace").Map.SkyTrial.Model.FinishPart.Position
            print("Sky")
        elseif game:GetService("Players")["LocalPlayer"].Data.Race.Value == "Mink" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Position = game:GetService("Workspace").StartPoint.Position
            print("Mink")
        end
  	end    
})

Tab:AddToggle({
	Name = "AncientOne Quest",
	Default = false,
	Callback = function(Value)
		_G.AncientOne_Quest = Value
        print(Value)
	end    
})

Tab:AddButton({
	Name = "KILLMySelf",
	Callback = function()
        game.Players.localPlayer.Character.Humanoid.Health = 0
  	end    
})

local Tab = Window:MakeTab({
	Name = "ðŸ”¥Elite Hunter",
	Icon = "rbxassetid://11806022366",
	PremiumOnly = false
})
Tab:AddToggle({
	Name = "Elite Hunter",
	Default = false,
	Callback = function(Value)
		_G.Auto_Elite_Hunter = Value
        
	end    
})

local Tab = Window:MakeTab({
	Name = "ðŸ”¥à¸œà¸¹à¹‰à¹€à¸¥à¹ˆà¸™",
	Icon = "rbxassetid://11806022366",
	PremiumOnly = false
})


Tab:AddToggle({
	Name = "NoClip",
	Default = false,
	Callback = function(Value)
		_G.NoClip = Value
        
	end    
})


Tab:AddButton({
	Name = "PositionCopy",
	Callback = function()
        setclipboard(tostring(game.Players.localPlayer.Character.HumanoidRootPart.Position))
  	end    
})

Tab:AddButton({
	Name = "Hop",
	Callback = function()
        
function Hop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    local File =
        pcall(
            function()
                AllIDs = game:GetService("HttpService"):JSONDecode(readfile("NotSameServers.json"))
            end
        )
    if not File then
        table.insert(AllIDs, actualHour)
        writefile("NotSameServers.json", game:GetService("HttpService"):JSONEncode(AllIDs))
    end
    function TPReturner()
        local Site
        if foundAnything == "" then
            Site =
                game.HttpService:JSONDecode(
                    game:HttpGet(
                        "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
                    )
                )
        else
            Site =
                game.HttpService:JSONDecode(
                    game:HttpGet(
                        "https://games.roblox.com/v1/games/" ..
                        PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
                    )
                )
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 50
        for i, v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _, Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile =
                                pcall(
                                    function()
                                        delfile("NotSameServers.json")
                                        AllIDs = {}
                                        table.insert(AllIDs, actualHour)
                                    end
                                )
                        end
                    end
                    num = num + 50
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(
                        function()
                            writefile("NotSameServers.json", game:GetService("HttpService"):JSONEncode(AllIDs))
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(
                            PlaceID,
                            ID,
                            game.Players.LocalPlayer
                            )
                        end
                    )
                    wait(50)
                end
            end
        end
    end

    function Teleport()
        while wait() do
            pcall(
                function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end
            )
        end
    end

    Teleport()
end

Hop()
  	end    
})

Tab:AddButton({
	Name = "Rejoin",
	Callback = function()
        game:GetService'TeleportService':TeleportToPlaceInstance(game.PlaceId,game.JobId,game:GetService'Players'.LocalPlayer)
  	end    
})

local Tab = Window:MakeTab({
	Name = "TeleportWorld",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "World 1",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
  	end    
})Tab:AddButton({
	Name = "World 2",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
  	end    
})Tab:AddButton({
	Name = "World 3",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
  	end    
})

local Tab = Window:MakeTab({
	Name = "Mythic Island",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddToggle({
	Name = "Teleport Mythic Island",
	Default = false,
	Callback = function(Value)
		_G.Teleport_to_Mythic_Island = Value
	end    
})



Tab:AddToggle({
	Name = "Teleport to Gear",
	Default = false,
	Callback = function(Value)
		_G.Teleport_to_Gear = value
	end    
})


OrionLib:Init()
